{"version":3,"sources":["models/Articles.js","routes/api/articles.js","routes/api/index.js","routes/index.js","app.js"],"names":["Schema","mongoose","ArticlesSchema","title","String","body","author","timestamps","methods","toJSON","_id","createdAt","updatedAt","model","router","express","Router","Articles","post","req","res","next","status","json","errors","finalArticle","save","then","article","catch","get","find","sort","articles","map","param","id","findById","err","sendStatus","patch","delete","findByIdAndRemove","use","require","isProduction","process","env","NODE_ENV","app","bundler","Bundler","middleware","urlencoded","extended","static","path","join","__dirname","secret","cookie","maxAge","resave","saveUninitialized","connect","set","Error","message","error","server","listen","console","log"],"mappings":"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","file":"app.js","sourceRoot":"..","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst { Schema } = mongoose;\r\n\r\nconst ArticlesSchema = new Schema(\r\n  {\r\n    title: String,\r\n    body: String,\r\n    author: String\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nArticlesSchema.methods.toJSON = function() {\r\n  return {\r\n    _id: this._id,\r\n    title: this.title,\r\n    body: this.body,\r\n    author: this.author,\r\n    createdAt: this.createdAt,\r\n    updatedAt: this.updatedAt\r\n  };\r\n};\r\n\r\nmongoose.model(\"Articles\", ArticlesSchema);\r\n","import mongoose from \"mongoose\";\r\nimport express from \"express\";\r\nconst router = express.Router();\r\nconst Articles = mongoose.model(\"Articles\");\r\n\r\nrouter.post(\"/\", (req, res, next) => {\r\n  const { body } = req;\r\n\r\n  if (!body.title) {\r\n    return res.status(422).json({\r\n      errors: {\r\n        title: \"is required\"\r\n      }\r\n    });\r\n  }\r\n\r\n  if (!body.author) {\r\n    return res.status(422).json({\r\n      errors: {\r\n        author: \"is required\"\r\n      }\r\n    });\r\n  }\r\n\r\n  if (!body.body) {\r\n    return res.status(422).json({\r\n      errors: {\r\n        body: \"is required\"\r\n      }\r\n    });\r\n  }\r\n\r\n  const finalArticle = new Articles(body);\r\n  return finalArticle\r\n    .save()\r\n    .then(() => res.json({ article: finalArticle.toJSON() }))\r\n    .catch(next);\r\n});\r\n\r\nrouter.get(\"/\", (req, res, next) => {\r\n  return Articles.find()\r\n    .sort({ createdAt: \"descending\" })\r\n    .then(articles =>\r\n      res.json({ articles: articles.map(article => article.toJSON()) })\r\n    )\r\n    .catch(next);\r\n});\r\n\r\nrouter.param(\"id\", (req, res, next, id) => {\r\n  return Articles.findById(id, (err, article) => {\r\n    if (err) {\r\n      return res.sendStatus(404);\r\n    } else if (article) {\r\n      req.article = article;\r\n      return next();\r\n    }\r\n  }).catch(next);\r\n});\r\n\r\nrouter.get(\"/:id\", (req, res, next) => {\r\n  return res.json({\r\n    article: req.article.toJSON()\r\n  });\r\n});\r\n\r\nrouter.patch(\"/:id\", (req, res, next) => {\r\n  const { body } = req;\r\n\r\n  if (typeof body.title !== \"undefined\") {\r\n    req.article.title = body.title;\r\n  }\r\n\r\n  if (typeof body.author !== \"undefined\") {\r\n    req.article.author = body.author;\r\n  }\r\n\r\n  if (typeof body.body !== \"undefined\") {\r\n    req.article.body = body.body;\r\n  }\r\n\r\n  return req.article\r\n    .save()\r\n    .then(() => res.json({ article: req.article.toJSON() }))\r\n    .catch(next);\r\n});\r\n\r\nrouter.delete(\"/:id\", (req, res, next) => {\r\n  return Articles.findByIdAndRemove(req.article._id)\r\n    .then(() => res.sendStatus(200))\r\n    .catch(next);\r\n});\r\n\r\nexport default router;\r\n","import express from 'express'\r\nconst router = express.Router();\r\n\r\nrouter.use('/articles', require('./articles'));\r\n\r\nexport default router","import express from 'express'\r\nconst router = express.Router();\r\n\r\nrouter.use('/api', require('./api'));\r\n\r\nexport default router","import express from \"express\";\r\nimport session from \"express-session\";\r\nimport cors from \"cors\";\r\nimport errorHandler from \"errorhandler\";\r\nimport mongoose from \"mongoose\";\r\nimport morgan from \"morgan\";\r\nimport Bundler from 'par'\r\n\r\nimport Articles from './models/Articles'\r\n\r\nconst isProduction = process.env.NODE_ENV === \"production\";\r\n\r\nconst app = express();\r\n\r\n// Include parcel as middleware\r\nconst bundler = new Bundler()\r\napp.use(bundler.middleware());\r\n\r\napp.use(cors());\r\napp.use(morgan(\"dev\"));\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(express.json());\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\napp.use(\r\n  session({\r\n    secret: \"LightBlog\",\r\n    cookie: { maxAge: 60000 },\r\n    resave: false,\r\n    saveUninitialized: false\r\n  })\r\n);\r\n\r\nif (!isProduction) {\r\n  app.use(errorHandler());\r\n}\r\n\r\nmongoose.connect(\r\n  \"mongodb+srv://jlfly12:wZSYV13*Fm@cluster0-jxjdp.mongodb.net/test?retryWrites=true&w=majority\"\r\n);\r\nmongoose.set(\"debug\", true);\r\n\r\n// Add models\r\n\r\n\r\n// Add routes\r\napp.use(require(\"./routes\"));\r\n\r\napp.use((req, res, next) => {\r\n  const err = new Error(\"Not Found\");\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\nif (!isProduction) {\r\n  app.use((err, req, res) => {\r\n    res.status(err.status || 500);\r\n\r\n    res.json({\r\n      errors: {\r\n        message: err.message,\r\n        error: err\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\napp.use((err, req, res) => {\r\n  res.status(err.status || 500);\r\n\r\n  res.json({\r\n    errors: {\r\n      message: err.message,\r\n      error: {}\r\n    }\r\n  });\r\n});\r\n\r\nconst server = app.listen(4000, () =>\r\n  console.log(\"Server started on http://localhost:4000\")\r\n);\r\n"]}